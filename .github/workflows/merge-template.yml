name: 'Merge Template'

on:
  release:
    types: [published]

jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
      run_pipeline: ${{ steps.check.outputs.run_pipeline }}
    steps:
      - id: check
        run: |
          if [[ "${{ github.event.release.name }}" == *deploy* ]]; then
            echo "run_pipeline=false" >> $GITHUB_OUTPUT
          else
            echo "run_pipeline=true" >> $GITHUB_OUTPUT
          fi
  format:
    needs: pre-check
    if: needs.pre-check.outputs.run_pipeline == 'true'
    uses: ./.github/workflows/code-formatter.yml
  unit-tests:
    needs: pre-check
    if: needs.pre-check.outputs.run_pipeline == 'true'
    uses: ./.github/workflows/testing-unit.yml
  E2E:
    needs: pre-check
    if: needs.pre-check.outputs.run_pipeline == 'true'
    uses: ./.github/workflows/testing-e2e.yml
  check:
    needs: pre-check
    if: needs.pre-check.outputs.run_pipeline == 'true'
    uses: ./.github/workflows/testing-svelte-check.yml
  docker-compose:
    needs: pre-check
    if: needs.pre-check.outputs.run_pipeline == 'true'
    uses: ./.github/workflows/docker-compose-test.yml

  merge-template:
    runs-on: ubuntu-latest
    needs: [format, unit-tests, E2E, check, docker-compose]

    strategy:
      fail-fast: false
      matrix:
        templates:
          [
            git@github.com:tsaxking/tators-dashboard-kit.git,
            git@github.com:tsaxking/tators-app-kit.git,
            git@github.com:4sight-live/4sight-web-server.git,
            git@github.com:tsaxking/inventory-kit.git,
            git@github.com:tsaxking/sfz-budgeting.git,
            git@github.com:4sight-live/streaming-service.git,
            git@github.com:lordbagel42/better-fundraising.git,
            git@github.com:Ansodo-SophieH/tracker-app.git
          ]

    steps:
      - name: Retrieve git dependencies
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Checkout everything to get access to the tags
          ref: ${{ github.ref }}
          token: ${{ secrets.GH_TOKEN }}

      - name: 'Setup ssh-agent'
        uses: 'webfactory/ssh-agent@v0.5.0'
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: v22.12.0

      - name: Install dependencies
        run: pnpm i

      - name: Load .env variables
        run: |
          cp config.example.json config.json
          touch .env
          echo "OAUTH2_CLIENT_ID=1234567890" >> .env
          echo "OAUTH2_CLIENT_SECRET=1234567890" >> .env
          export $(cat .env | xargs)

      - name: Send pull-request
        run: |
          echo "Creating variables"
          LATEST_TAG=$(git describe --tags --always --abbrev=0)
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          REPOSITORY="${{ matrix.templates }}"
          BRANCH_NAME="update-template-to-$LATEST_TAG"
          CLONE_DIR="target-repo"

          echo "Running premerge scripts"
          pnpm script premerge-render ${{ matrix.templates }} --force

          echo "Configuring Git"
          git config user.email "taylorking206@u.boisestate.edu"
          git config user.name "Sveltekit Bot"
          echo "Changing remote"

          # Change the remote to the repository we want to push to.
          git remote rm origin
          git remote add origin ${{ matrix.templates }}

          echo "Checking out Branch: $BRANCH_NAME"
          # Create a new feature branch for the changes.
          git checkout -b $BRANCH_NAME

          echo "Committing"
          # Commit the changes and push the feature branch to origin
          git add .
          git commit --allow-empty -m "Update Template to $LATEST_TAG"
          git push origin --set-upstream $BRANCH_NAME
